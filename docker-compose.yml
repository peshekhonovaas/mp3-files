services:
  eureka-server:
    platform: linux/amd64
    build:
      context: .
      dockerfile: eureka-server/Dockerfile
    environment:
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: ${EUREKA_CLIENT_REGISTER_WITH_EUREKA}
      EUREKA_CLIENT_FETCH_REGISTRY: ${EUREKA_CLIENT_FETCH_REGISTRY}
      LOGGING_LEVEL_COM_NETFLIX_EUREKA: ${LOGGING_LEVEL_COM_NETFLIX_EUREKA}
      LOGGING_LEVEL_COM_NETFLIX_DISCOVERY: ${LOGGING_LEVEL_COM_NETFLIX_DISCOVERY}
    ports:
      - "8761:8761"
    restart: on-failure

  cloud-gateway:
    platform: linux/amd64
    build:
      context: .
      dockerfile: cloud-gateway/Dockerfile
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      GATEWAY_ROUTE_RESOURCE_SERVICE_PATH: ${GATEWAY_ROUTE_RESOURCE_SERVICE_PATH}
      GATEWAY_ROUTE_RESOURCE_SERVICE_URI: ${GATEWAY_ROUTE_RESOURCE_SERVICE_URI}
      GATEWAY_ROUTE_SONG_SERVICE_PATH: ${GATEWAY_ROUTE_SONG_SERVICE_PATH}
      GATEWAY_ROUTE_SONG_SERVICE_URI: ${GATEWAY_ROUTE_SONG_SERVICE_URI}
      GATEWAY_ROUTE_RESOURCE_PROCESSOR_PATH: ${GATEWAY_ROUTE_RESOURCE_PROCESSOR_PATH}
      GATEWAY_ROUTE_RESOURCE_PROCESSOR_URI: ${GATEWAY_ROUTE_RESOURCE_PROCESSOR_URI}
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CLOUD_GATEWAY: DEBUG
      LOGGING_LEVEL_REACTOR_NETTY_HTTP_CLIENT: DEBUG
    ports:
      - "8085:8080"
    depends_on:
      - eureka-server

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    command: server /data --console-address ":9001"

  song-db:
    image: postgres:17-alpine3.21
    environment:
      POSTGRES_DB: ${DB_SONG_NAME}
      POSTGRES_USER: ${DB_SONG_USER}
      POSTGRES_PASSWORD: ${DB_SONG_PASS}
    volumes:
      - ./init-scripts/song-db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  song-service:
    platform: linux/amd64
    build:
      context: .
      dockerfile: song-service/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: ${DB_SONG_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_SONG_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_SONG_PASS}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
    deploy:
      replicas: 1
    depends_on:
      - song-db

  resource-db:
    image: postgres:17-alpine3.21
    environment:
      POSTGRES_DB: ${DB_RESOURCE_NAME}
      POSTGRES_USER: ${DB_RESOURCE_USER}
      POSTGRES_PASSWORD: ${DB_RESOURCE_PASS}
    volumes:
      - ./init-scripts/resource-db:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"

  resource-service:
    platform: linux/amd64
    build:
      context: .
      dockerfile: resource-service/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: ${DB_RESOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_RESOURCE_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_RESOURCE_PASS}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
    depends_on:
      - resource-db
      - minio